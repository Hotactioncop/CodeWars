int last_digit(std::string str1, std::string str2) {
  if (str2.size() == 1 && str2[str2.size() - 1] == '0') return 1;
	int n = str1[str1.size() - 1]-48;
	if (str2.size() == 1 && str2[str2.size() - 1] == '1') return n;
	if (n == 0 || n == 1 || n == 5 || n == 6 ) return n;
	std::vector<std::vector<int>> data;
	data.push_back({ 0 });
	data.push_back({ 1 });
	data.push_back({ 6,2,4,8 });
	data.push_back({ 1,3,9,7 });
	data.push_back({ 6,4 });
	data.push_back({ 5 });
	data.push_back({ 6 });
	data.push_back({ 1,7,9,3 });
	data.push_back({ 6,8,4,2 });
	data.push_back({ 1,9 });
	int mult = 0;
	if (str2.size() == 1)
	{
		mult = str2[str2.size() - 1]-48;
	}
	else
	{
		for (int i = str2.size() - 2; i < str2.size(); i++)
		{
			mult *= 10;
			mult += str2[i] - 48;
		}
	}
	if (n == 4 || n == 9)
		mult %= 2;
	else
		mult %= 4;
	return data[n][mult];
}